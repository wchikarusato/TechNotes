# gitあれこれ

- ローカルからプルリクできるようになるまで
https://employment.en-japan.com/engineerhub/entry/2017/01/31/110000

公式マニュアル
  https://guides.github.com/
  HelloWorldに沿ってやればgithubがどういう仕組みか、簡単な使い方はわかる


# スナップショットって何?
  gitはスナップショットの集合であるとか良く書いてあるが、スナップショットとは何ぞや。
  例えば 1～100000を記述したファイルがあったとして
  ->これをgitにcommit
  ->末尾に100001を追加
  ->もう一回gitにcommitしたとすると
    ->svnなら100001を差分として保持するが
    ->gitなら1～100000と1～100001の両方のファイルが保持される
  実際はスナップショットへの参照を保持するから変更なければ既に保持したファイルへのリンクが保持される模様
  つまり、push/pullはスナップショットを送る/取得するの意味

  容量やばくならない？
  ->画像、動画ファイルとかのメディアファイルを扱うとヤバイらしい
  実際githubに100MBを超えるpush出来なかった模様(ローカルのgit自体にはcommitできる)
!!!! =>つまり、無意味にバックアップ目的でcommitしてはならない(戒め !!!!



# 以下の手順で実験してみる
- git-hub でリポジトリ作る
- ローカルにリポジトリをクローン
- 色々修正してローカルでコミット
- 編集が一区切りついたらリモートにpush (ブランチをmasterでなく違うのにする
- ローカルでもう一回編集してcommit  
   ->ブランチ切った方にもう一回push
- リモートでpullリク


# git-hubのリポジトリの名前変える方法
- リポジトリを選択
- Settingsタブを押す
- Repository nameを修正してRename押す  
  ローカルからリモートの名前を変えるケースはあるのだろうか


# Websiteって何するの? リポジトリの横で入力できるやつ
  ソースコードを公開しても別に気になしないからとにかくホームページ作りたいって人向け
  サンプルコードをKnowledgeに公開するのに使えるかも知れない
  https://ferret-plus.com/5875
  https://techacademy.jp/magazine/6445
  gh-pages ブランチを切りたくない場合は下
  https://qiita.com/budougumi0617/items/221bb946d1c90d6769e9
  https://help.github.com/categories/github-pages-basics/


# Forkって何するの？
  gitでなくgithubの機能。リポジトリをgithub上でcloneする
  git clone と異なり、cloneしたという通知がオリジナル開発者に送られる
  
  あなたがオリジナル・リポジトリを fork する。
  オリジナル開発者は外部の貢献者がいることを fork の通知で知る。
  あなたが fork したリポジトリで作業をし作業履歴を伸ばす。
  あなたがオリジナル開発者に pull request を送る。
  
  以上の通り、部外者が開発に参加するのにforkを使う。
  逆に、貢献を意図してないのにforkしたらオリジナル開発者には貢献の意思があると誤解されるので注意が必要
  その場合は素直にgitcloneしとこう



# README.md の書き方
  http://www.daipanman.com/entry/2017/09/14/162232

- cookbook  
  http://codechord.com/2012/01/readme-markdown/


# 半角英字の前後にスペースを入れるのかどうか
  どうでも良いけど入れるべきではない。  
  そもそもcssなりブラウザなりで全角と半角英数字の間にスペーシングサポートするべき  
  対応された時に下手にスペースや\<br\>入れてたらぐちゃぐちゃになる。  
  ただ、英語の文章は単語の間にスペース入れないとおかしな事になるので全部が全部やるべきではない。  


# 設定確認
$ git config --system --list
$ git config --global --list
$ git config --local --list

C:\usr\local\Git\mingw64\etc
.gitconfig

C:\usr\local\work_personal\TechNotes\.git
config


$ git config --global user.name "メインアカウント"
$ git config --global user.email "メインアカウントメールアドレス"
$ cd Project/develop
$ git config --local user.name "サブアカウント"
$ git config --local user.email "サブアカウントメールアドレス"

.gitconfig
[user]
    name = サブアカウント
    email = サブアカウントメールアドレス
